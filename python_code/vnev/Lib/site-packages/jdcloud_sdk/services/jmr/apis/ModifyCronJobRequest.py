# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class ModifyCronJobRequest(JDCloudRequest):
    """
    修改执行计划
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(ModifyCronJobRequest, self).__init__(
            '/regions/{regionId}/cronJob:modify', 'POST', header, version)
        self.parameters = parameters


class ModifyCronJobParameters(object):

    def __init__(self, regionId, ):
        """
        :param regionId: 地域ID
        """

        self.regionId = regionId
        self.jmrPlanViewModel = None
        self.time = None
        self.month = None
        self.week = None
        self.day = None
        self.hour = None
        self.minute = None

    def setJmrPlanViewModel(self, jmrPlanViewModel):
        """
        :param jmrPlanViewModel: (Optional) 
        """
        self.jmrPlanViewModel = jmrPlanViewModel

    def setTime(self, time):
        """
        :param time: (Optional) 
        """
        self.time = time

    def setMonth(self, month):
        """
        :param month: (Optional) 
        """
        self.month = month

    def setWeek(self, week):
        """
        :param week: (Optional) 
        """
        self.week = week

    def setDay(self, day):
        """
        :param day: (Optional) 
        """
        self.day = day

    def setHour(self, hour):
        """
        :param hour: (Optional) 
        """
        self.hour = hour

    def setMinute(self, minute):
        """
        :param minute: (Optional) 
        """
        self.minute = minute

